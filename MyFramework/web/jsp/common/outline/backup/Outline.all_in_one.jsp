<%@ page language="java" contentType="text/html;  charset=utf-8" pageEncoding="utf-8"%><%@include file="/jsp/common/include/include_outline.jsp"%><!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Insert title here</title><%@ include file="/jsp/common/include/include_js.jsp"%><style>.bottom-border {padding: 0 15 0 0;background:#ffffff;margin : 0;}</style><script type="text/javascript">Ext.define('Ext.form.field.Checkbox', {    override : 'Ext.form.field.Checkbox',    getValue: function () {        return this.checked ? this.getSubmitValue() : '';    }});function hoConfirm(msg, fn, scope) {	if( typeof fn === 'function' ) {		Ext.MessageBox.confirm('Confirm', msg, fn, scope );	}}function hoAlert(msg, fn) {	Ext.MessageBox.show({        title: '경고',        msg: msg ,        buttons: Ext.MessageBox.OK,        fn: fn ? fn : function() {} ,        icon: Ext.MessageBox.WARNING    });	// Ext.MessageBox.alert('Status', msg, fn ? fn : function() {} );}function hoError(msg, fn) {	Ext.MessageBox.show({        title: '오류',        msg: msg ,        scope : this,        buttons: Ext.MessageBox.OK,        fn: fn ? fn : function() {} ,        icon: Ext.MessageBox.ERROR    });}function hoMessage(msg, fn) {	Ext.MessageBox.show({        title: '알림',        msg: msg ,        buttons: Ext.MessageBox.OK,        fn: fn ? fn : function() {} ,        icon: Ext.MessageBox.INFO    });}function getParam(scope, _p_action_flag, opts) {	// var param = Ext.apply(scope.up('form').getForm().getFieldValues(), {p_action_flag : _p_action_flag} _);	var param = scope.up('form').getForm().getFieldValues();	Ext.apply(param, {p_action_flag : _p_action_flag});	if( opts ) {		Ext.apply(param, opts);	}	return param;}<% String striptOutJsp = incBodyJSP + "&division=script_out"; %><jsp:include page="<%=striptOutJsp%>" />Ext.onReady(function() {Ext.QuickTips.init();function onItemCheck(item, checked){}var viewport = Ext.create('Ext.Viewport', {    id: 'border-example',    layout: 'border',    items: [ Ext.create('Ext.Toolbar', {    	region: 'north',		// ui: 'header',		margins : '5 5 5 5',		items : [{	text: 'Radio Options',					menu: {				        xtype: 'menu',				        items: [{				                text: 'Menu One',				                iconCls: 'edit'				            }, {				                text: 'Menu Two',				                menu: {				                    xtype: 'menu',				                    items: [{				                        text: 'Next Level'				                    },{				                        text: 'Next Level'				                    },{				                        text: 'Next Level',				                        	menu: {							                    xtype: 'menu',							                    items: [{							                        text: 'Next Level2-1'							                    },{							                        text: 'Next Level2-2'							                    },{							                        text: 'Next Level2-3'							                    }]							                }				                    }]				                }				            }, {				                text: 'Menu Three',				                scale: 'small'				            }, {				                text: 'Menu Four',				                scale: 'small'				        }]				    }			}, {text: 'Radio Options',				menu: {        // <-- submenu by nested config object				    items: [				        {				            text: 'Aero Glass',				            checked: true,				            group: 'theme',				            checkHandler: onItemCheck				        }, {				            text: 'Vista Black',				            checked: false,				            group: 'theme'				        }, {				            text: 'Gray Theme',				            checked: false,				            group: 'theme',				            checkHandler: onItemCheck				        }, {				            text: 'Default Theme',				            checked: false,				            group: 'theme',				            checkHandler: onItemCheck				        }				    ]				}		}, '|']        }),        Ext.widget('tabpanel', {        	renderTo: 'div_main_tab_panel',        	id : 'id_main_tabpanel',        	region: 'center',        	margins: '0 5 5 0',        	title : '메뉴명 또는 선택된 item',        	defaults: {                    autoScroll: true                },            listeners : {            	resize : function (_this) {        			// alert(_this.child("panel").child("grid"));            	}            },        	items : [<% String striptJsp = incBodyJSP + "&division=script&type=main"; %><jsp:include page="<%=striptJsp%>" />			]        }) //end id_main_tabpanel item,            {            	xtype: 'tabpanel',                region: 'west',                id : 'id_main_west_panel',                title: 'Process View',                dockedItems: [{                    dock: 'top',                    xtype: 'toolbar',                    items: [ '->', {                       xtype: 'button',                       text: 'test',                       tooltip: 'Test Button'                    }]                }],                animCollapse: true,                collapsible: true,                split: true,                width: 225, // give east and west regions a width                minSize: 175,                maxSize: 400,                margins: '0 0 5 5',                activeTab: 1,                tabPosition: 'bottom',                items: [{                    html: '<p>A TabPanel component can be a region.</p>',                    title: 'A Tab',                    autoScroll: true                }, Ext.create('Ext.grid.PropertyGrid', {                        title: 'Property Grid',                        closable: true,                        source: {                            "(name)": "Properties Grid",                            "grouping": false,                            "autoFitColumns": true,                            "productionQuality": false,                            "created": Ext.Date.parse('10/15/2006', 'm/d/Y'),                            "tested": false,                            "version": 0.01,                            "borderWidth": 1                        }                    }), Ext.create('Ext.tree.Panel', {                        title: 'Simple Tree',                        width: 200,                        height: 150,                        store: Ext.create('Ext.data.TreeStore', {    	                        root: {    	                            expanded: true,    	                            children: [    	                                { text: "detention", leaf: true },    	                                { text: "homework", expanded: true, children: [    	                                    { text: "book report", leaf: true },    	                                    { text: "algebra", leaf: true}    	                                ] },    	                                { text: "buy lottery tickets", leaf: true }    	                            ]    	                        }    	                    }),                        rootVisible: true                    })]            }		]	});});<% String striptJsp2 = incBodyJSP + "&division=script"; %><jsp:include page="<%=striptJsp2%>" /></script></head><body>	<div id="top_menu"></div>	<div id="div_main_tab_panel"></div><% String htmlJsp = incBodyJSP + "&division=html"; %><jsp:include page="<%=htmlJsp%>" /></body></html>