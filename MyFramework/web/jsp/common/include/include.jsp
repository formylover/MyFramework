<%@ page	import="java.util.*"	import="org.apache.log4j.Logger"	import="project.jun.was.HoModel"	import="project.jun.was.spring.HoController"	import="project.jun.was.parameter.HoParameter"	import="project.jun.config.HoConfig"	import="project.jun.was.servlet.HoServlet"	import="project.jun.was.HoSession"	import="project.jun.util.HoSpringUtil"	import="project.jun.util.HoValidator"	import="project.jun.dao.result.HoMap"	import="project.jun.util.cache.HoCache"	import="project.jun.util.cache.HoEhCache"	import="project.jun.dao.result.transfigure.HoSetHasMap"	import="project.jun.aop.advice.HoCacheAdvice"%><%	HoSpringUtil   hsUtil = new HoSpringUtil();	HoModel        model     = new HoModel(request);	HoParameter    param     = (HoParameter) model.get(HoController.HO_PARAMETER);	HoConfig       hoCfg     = (HoConfig) hsUtil.getBean(application, "config");	HoServlet      hoServlet = new HoServlet(request, response, hoCfg);	//HoSession      hoSession = hoServlet.getHoSession();	HoCache        cache     = new HoEhCache((net.sf.ehcache.Cache)new HoSpringUtil().getBean(application, "ehcache"));	//HoSetHasMap    code      = (HoSetHasMap) cache.get(HoCacheAdvice.CACHED_CODE_SET);	//this.setHoSetHasMap(code);	/*	Enumeration enum = request.getAttributeNames();	while( enum.hasMoreElements() ) {		String key = (String) enum.nextElement().toString();		Object obj = request.getAttribute(key);		System.out.println(key + ":" + obj.getClass().getName() );	}	*/	//hoSession.setObject("NAME", "TEST");	//HoMap          ssnMap = new HoMap(hoSession.getMap());	String incBodyJSP = model.getString(HoController.HO_INCLUDE_JSP);	Logger logger = Logger.getLogger( getClass() );	String G_CONTEXTROOT = request.getContextPath();	if( param == null || !param.useServlet() ) {		out.println(" Can't acess jsp directly...");		return;	}	String P_ACTION_FLAG = param.get("P_ACTION_FLAG");	boolean isScript = true;	boolean isHtml = true;	String p_action_flag = param.get("p_action_flag");	String division          = param.get("division");	isScript = "script".equals(division);	isHtml 	 = "html".equals(division);%><% if( isScript )  { %>// INCLUDE-JSP : <%= incBodyJSP %> p_action_flag=<%= p_action_flag %><% } else if( isHtml )  { %><!--INCLUDE-JSP : <%= incBodyJSP %> p_action_flag=<%= p_action_flag %>--><% }  %><%!	HoSetHasMap    codeSet = null;	public void setHoSetHasMap(HoSetHasMap    code) {		this.codeSet = code;	}	public String getCodeName(String code) {		return getCodeName(code, "CODE");	}	public String getCodeName(String code, String column ) {		Object obj = codeSet.getHoMap(code).get(column);		if( obj != null ) {			return obj.toString();		}		return "-?-";	}%>