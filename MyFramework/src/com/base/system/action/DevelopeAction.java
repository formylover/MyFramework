package com.base.system.action;import project.jun.was.HoModel;import project.jun.was.result.message.HoMessage;import project.jun.was.servlet.HoServlet;import project.jun.was.parameter.HoParameter;import com.base.system.delegate.DevelopeDelegate;import com.base.system.delegate.MenuDelegate;import com.base.system.action.ProjectAction;public class DevelopeAction extends ProjectAction {	/*	 * [메뉴 관리]	 * 메뉴 목록을 조회 / 메뉴 상세 정보 / 메뉴별 기능을 조회     * @return      * 	case1 : ModelAndView - 파일 다운로드 또는 Excel 다운로드시     * 	case2 : HoMessage,String, String[] / HoException,SQLException  - 처리결과 메시지 출력 화면 이동     * 	case3 : null 화면 View(jsp) 표시	 */	@Override	public Object execute(String actionFlag, HoModel model, HoParameter parameter, HoServlet   hoServlet) throws Exception {		this.setMessagePage("/jsp/common/message/ajax.jsp");		this.setExceptionPage("/jsp/common/message/ajax.jsp");				String outline = "COMPONENT";		// 해당메뉴의 개발 진도 정보를 조회. (TODO PMS로 이동) 		if(actionFlag.equals("r_detail_pms") ) { 			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			delegate.detailPms(actionFlag, model, parameter, parameter.getHoConfig());			this.setForwardPage( (String) this.getHoConfig().getOutlineMap().get("DATA_JSON_DETAIL") );		} 		// Form에 저장된 저장이력 조회		else if(actionFlag.equals("r_list_form_history") ) {			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			delegate.listFormHistory(actionFlag, model, parameter, parameter.getHoConfig());			this.setForwardPage( (String) this.getHoConfig().getOutlineMap().get("DATA_JSON") );		} 		// Form에 저장된 상세 정보 목록		else if(actionFlag.equals("r_list_form_detail") ) {			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			delegate.listFormDetail(actionFlag, model, parameter, parameter.getHoConfig());			this.setForwardPage( (String) this.getHoConfig().getOutlineMap().get("DATA_JSON") );		} 		// Form에 저장된 상세 정보		else if(actionFlag.equals("r_detail_form") ) {			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			delegate.detailForm(actionFlag, model, parameter, parameter.getHoConfig());			this.setForwardPage( (String) this.getHoConfig().getOutlineMap().get("DATA_JSON_LIST_TO_MAP") );		} 		// Form의 정보를 저장		else if(actionFlag.equals("b_list_form_history") ) {			parameter.infoParameter(false);			parameter.infoParameterValue(false);			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			Object result = delegate.insertFormHistory(actionFlag, model, parameter, parameter.getHoConfig());						return result;					} 		// Form의 이력을 삭제		else if(actionFlag.equals("b_delete_form") ) {			DevelopeDelegate delegate = (DevelopeDelegate) super.getHoDelegate();			delegate.deleteFormHistory(actionFlag, model, parameter, parameter.getHoConfig());					} 				else {			parameter.infoParameter(false);			parameter.infoParameterValue(false);		}		return null;	}}