package project.jun.was.view;import java.util.Iterator;import java.util.Map;import org.apache.ibatis.metadata.result.MetaData;import org.springframework.web.context.WebApplicationContext;import project.jun.config.HoConfig;import project.jun.dao.HoDao;import project.jun.dao.parameter.HoQueryParameterMap;import project.jun.dao.result.HoMap;import project.jun.dao.result.HoList;import project.jun.dao.result.transfigure.HoMapHasList;import project.jun.util.HoExcelWriter;import project.jun.was.servlet.HoServlet;import project.jun.was.parameter.HoParameter;import project.jun.was.HoModel;import project.jun.was.HoSession;public class HoExcelViewImpl extends HoExcelView {	/**	 * 실제 다운로드 하는 method	 * @param actionFlag	 * @param param	 * @param ds	 * @param wreq	 * @param wew	 * @param factory	 * @throws Exception	 */	public void makeExcel(String actionFlag,HoParameter param, HoModel ds,HoServlet wreq, HoExcelWriter wew, WebApplicationContext factory) throws Exception {		HoDao dao = (HoDao)factory.getBean("proxyProjectDao");		HoQueryParameterMap value = new HoQueryParameterMap();        value.copy(param);		// 엑셀 파일명 정보 조회		HoMap excelInfo = dao.selectOne("BaseExcel.getExcelFileInfo", value);		setExcelName(wreq, excelInfo.getString("FILE_NAME") + (excelInfo.getString("FILE_NAME").endsWith(".xls") ? "" : ".xls") );    	wew.createSheet(excelInfo.getString("FILE_NAME"));		// 엑셀 헤더 정보 조회		HoList excelHeaderList = dao.select("BaseExcel.getExcelTitleList", value);		HoMapHasList dList = excelHeaderList.toHoMapHasList("ROW_SEQ");		String key = null;		Iterator it = dList.keyIterator();		int rowHeader = 0;		for( ; it.hasNext() ; rowHeader++) {			key = (String) it.next();			for( short cellHeader=0 ; cellHeader < (new Integer(dList.getList(key).size())).shortValue() ;  cellHeader++ ) {				wew.setCellValue(rowHeader, cellHeader , dList.getString(key, (new Short(cellHeader)).intValue() , "TITLE_NAME"));				wew.setCellStyleToTitle(rowHeader, cellHeader);			}		}		// 엑셀 컬럼 정보 조회		HoList excelColumnList = dao.select("BaseExcel.getExcelColumnList", value);		// 실제로 다운로드할 데이터.		HoList list = ds.getHoList(HoExcelView.HO_EXCEL_DATA);		MetaData md = list.getMetaData();		wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS + HoSession.FILE_NAME_SUFFIX , this.getExcelFileName());		wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS + "_TOTAL" , String.valueOf(list.size()));				String columnName = null;		try {			for( int row=0 ; row < list.size() ; row++ ) {				for( int cell=0 ; cell< excelColumnList.size() ; cell++) {					// 컬럼명을 가져온다.					columnName = excelColumnList.getString(cell, "COLUMN_NAME");					try {						if(md.getColumnType(md.getColumnIndex(columnName)) == java.sql.Types.NUMERIC) {							wew.setCellValue(row+rowHeader, new Integer(cell).shortValue(), list.getDouble(row, columnName));						} else {							wew.setCellValue(row+rowHeader, new Integer(cell).shortValue(), list.getString(row, columnName));						}					} catch (Exception e) {						wew.setCellValue(row+rowHeader, new Integer(cell).shortValue(), "조회되지 않은 값입니다.");					}				}				if( row%100 == 0) {					wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS + "_DOWNLOAD" , String.valueOf(row));					wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS , String.valueOf(Math.round(row*100/list.size())));				}			}			wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS + "_DOWNLOAD" , String.valueOf(list.size()));			wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS , String.valueOf(100));		} catch(Exception e) {			wreq.getSession().setAttribute( HoSession.STATUS_EXCEL_DOWNLOAD_PROGRESS , String.valueOf(-1));		}	}}