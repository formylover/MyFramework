package project.jun.util;public class Test {	public static void main(String [] arg) {		boolean [] bl = new boolean[5];		boolean and = true;		boolean or = true;		bl[0] = false;		bl[1] = true;		bl[2] = true;		bl[3] = true;		bl[4] = false;		for( int i=0 ;i<bl.length ; i++ ) {			and &= bl[i];		}		System.out.println(" and : " + and);		for( int i=0 ;i<bl.length ; i++ ) {			or |= bl[i];		}		System.out.println(" or : " + or);		String cell = "a";    	short cellIdx = 0;    	short idxVal = 0;    	String cellUp = cell.toUpperCase();    	for( int i=cellUp.length()-1,j=0  ;i>=0; i--, j++ ) {    		idxVal = (short) ((int)cellUp.charAt(i) - 65);    		cellIdx += (idxVal +1) * Math.pow(26, j);    	}		System.out.println(" cellIdx : " + (cellIdx-1));		System.out.println("===>" + new Test().getCellNum("AA"));		System.out.println("===>" + new Test().getCellNumaa("A"));		System.out.println("===>" + new Test().Column((short)1000));		System.out.println("===>" + new HoExcel().getCellNum("AA"));		System.out.println("===>" + new HoExcel().getCellName((short)702));	}    public short getCellNum(String cellName) {    	short cellNum = 0;    	for( int k=0 ; k<cellName.length() ; k++) {    		cellNum += ((k*25)+ ( k==0 ? 0 : 1 ) + ((int) cellName.charAt(k)) - 65);    	}    	return cellNum;    }    public String Column(short column)    {    	String a = "";        while( column > 0 ) {        	column --;        	a = (char)(65+column%26) + a;        	column /= 26;        }        return a;    }    public short getCellNumaa(String cellName) {    	short cellNum = 0;    	for( int k=0 ; k<cellName.length() ; k++) {    		cellNum += ((k*25)+ ( k==0 ? 0 : 1 ) + ((int) cellName.charAt(k)) - 65);    	}    	return cellNum;    }}