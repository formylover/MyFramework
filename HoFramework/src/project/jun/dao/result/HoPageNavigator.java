package project.jun.dao.result;import project.jun.was.parameter.HoParameter;import project.jun.was.parameter.HoParameterMap;import java.io.UnsupportedEncodingException;/** * @author  sks */public class HoPageNavigator{	/**	 * @uml.property  name="pageNo"	 */	private long pageNo;	private long lastPageNo;	private long prevPageNo;	private long nextPageNo;	private long beginPageNo;	private long endPageNo;	private int naviCnt = 10;	/**	 * @uml.property  name="beginRowNum"	 */	private long beginRowNum;	/**	 * @uml.property  name="endRowNum"	 */	private long endRowNum;	private long totRowCnt;	// 조회된 전체 Records	private long pageRowCnt;	/**	 * @uml.property  name="hParameter"	 * @uml.associationEnd	 */	private HoParameter parameter;	private String pgmUrl;	// action url	public HoPageNavigator(long totRowCnt, long pageRowCnt, long pageNo, HoParameter parameter, String uri ) {		this.parameter  = parameter;		setNavigationInfo(totRowCnt, pageRowCnt, pageNo, parameter);		org.springframework.web.util.UrlPathHelper urlPathHelper = new org.springframework.web.util.UrlPathHelper();		setPgmUrl(uri);	}	/**	 * @param pgmUrl	 * @uml.property  name="pgmUrl"	 */	public void setPgmUrl(String pgmUrl) {		this.pgmUrl = pgmUrl;	}	/**	 * 페이지 이동을 위한 인덱스를 반환합니다.	 * @return	 * @throws Exception	 */	public String getNavigationString() throws Exception {		return getNavigationString("");	}	/**	 * 페이지 이동을 위한 인덱스를 반환합니다.	 * @return	 * @throws Exception	 */	public String getNavigationString(String id) throws Exception	{		try		{			StringBuffer sbNavigation = new StringBuffer();			sbNavigation.append("<div id='divPageNavigationInfo'>");			sbNavigation.append("<div id='neo_navigation'>");			if( endPageNo > 0 ) {				sbNavigation.append("<span class='first_button' style='cursor:hand;' onclick='goPage"+id+"(1)'></span>");				sbNavigation.append("<span class='gap'></span>");				sbNavigation.append("<span class='prior_button' style='cursor:hand;' onclick='goPageNavi"+id+"("+this.totRowCnt+","+this.pageRowCnt+","+prevPageNo+")'></span>");				sbNavigation.append("<span class='gap'></span>");				for( long i = beginPageNo; i <= endPageNo; i++ ) {					if( i == pageNo )						sbNavigation.append("<span class='sel_num'>" + i + "</span>");					else						sbNavigation.append(						"<span class='unsel_num' style='cursor:hand;' onclick='goPage"+id+"("+i+")' onmouseover='this.style.fontWeight=\"bold\";' onmouseout='this.style.fontWeight=\"normal\";'>" + i + "</span>");					if( i != endPageNo )						sbNavigation.append("<span class='delimitor'>|</span>");				}				sbNavigation.append("<span class='gap'></span>");				sbNavigation.append("<span class='next_button' style='cursor:hand;' onclick='goPageNavi"+id+"("+this.totRowCnt+","+this.pageRowCnt+","+ nextPageNo +")'></span>");				sbNavigation.append("<span class='gap'></span>");				sbNavigation.append("<span class='last_button' style='cursor:hand;' onclick='goPage"+id+"("+ lastPageNo +")'></span>");				sbNavigation.append("<span class='tot_num'>" + totRowCnt + " Records</span>");				sbNavigation.append("<span class='page_num'>[<input id=\"page_no_force"+id+"\" type=\"text\" name=\"page_no_force"+id+"\" isNum=\"Y\" size=\""+String.valueOf(this.lastPageNo).length()+"\" value=\""+pageNo+"\" onkeypress=\"if(event.keyCode==13){ goPage(this.value, this); }\">" + "/"+ this.lastPageNo + " Page]</span>");			}			sbNavigation.append("</div>");//<div>["+totRowCnt+" Records]</div>			sbNavigation.append("</div>");//<div>["+totRowCnt+" Records]</div>			return sbNavigation.toString();		}		catch( Exception e )		{			throw new Exception( "시스템 오류로 작업을 중단합니다.");		}	}	/**	 * 조회조건을 전송하는 폼 생성	 * @param request	 * @return	 * @throws UnsupportedEncodingException	 */	public  String getMakeParamForm() throws UnsupportedEncodingException {		return getMakeParamForm("");	}	/**	 * 조회조건을 전송하는 폼 생성	 * @param request	 * @return	 * @throws UnsupportedEncodingException	 */	public String getMakeParamForm(String id) throws UnsupportedEncodingException {		String [] names = this.parameter.getNames();		String strPageData[] = null;		StringBuffer sb = new StringBuffer();		sb.append("<FORM NAME='pageForm"+id+"' ACTION='"+pgmUrl+"' METHOD='post'>");		sb.append("<INPUT TYPE='hidden' NAME='pageNo' VALUE='"+pageNo+"'>\n");		String key = null;		for( int idx=0 ; idx<names.length ; idx++ ) {			key = names[idx];			strPageData = parameter.getValues(key);			for(int i=0; i<strPageData.length; i++ )				if(!key.equals("pageNo"))					sb.append("<INPUT TYPE='hidden' NAME='"+key+"' VALUE='"+strPageData[i]+"'>\n");//toKr!!		}		sb.append("</FORM>");		sb.append("<SCRIPT language='javascript'>\n");		sb.append("function goPage"+id+"(pageNo) {\n");		sb.append("	var doc = document.pageForm"+id+";\n");		sb.append("	if( pageNo > "+this.lastPageNo+" ) {\n");		sb.append("		arguments[1].value = "+this.pageNo+"; \n");		sb.append("		return; \n");		sb.append("	} \n");		sb.append("	doc.pageNo.value = pageNo;\n");		sb.append("	doc.submit();\n");		sb.append("}\n");		sb.append("var nav"+id+" = new NeoNavigation(); \n");		sb.append("	nav"+id+".setCurrentPageNo("+this.pageNo+"); \n");		sb.append("function goPageNavi"+id+"(totDataCnt, pageRowCnt, pageNo) { \n");		sb.append("	nav"+id+".setNavigationInfo(totDataCnt, pageRowCnt, pageNo); \n");		sb.append("	divPageNavigationInfo.innerHTML = nav"+id+".getNavigationString(); \n");		sb.append("}\n");		sb.append("</SCRIPT>\n");		return sb.toString();	}	public void setNavigationInfo( long totRowCnt, long pageRowCnt, long pageNo, HoParameter parameter )	{		setNavigationInfo( totRowCnt, pageRowCnt, pageNo, parameter, 10 );	}	public void setNavigationInfo( long totRowCnt, long pageRowCnt, long pageNo, HoParameter parameter, int naviCnt )	{		this.naviCnt = naviCnt;		this.pageNo = pageNo;		this.parameter = parameter;		this.totRowCnt = totRowCnt;		this.pageRowCnt = pageRowCnt;		// 시작페이지		this.beginPageNo = ((this.pageNo-1) / this.naviCnt) * this.naviCnt + 1;		// 마지막 페이지		this.lastPageNo = (int)(totRowCnt/pageRowCnt);		if( totRowCnt % pageRowCnt > 0 )			lastPageNo++;		if( this.pageNo > lastPageNo )			this.pageNo = lastPageNo;		else if( this.pageNo < 1 )			this.pageNo = 1;		// 끝 페이지		this.endPageNo = beginPageNo + (this.naviCnt-1);		if( endPageNo > lastPageNo )			endPageNo = lastPageNo;		// 이전 페이지		this.prevPageNo = this.beginPageNo -1;		if( prevPageNo < 1 )			prevPageNo = 1;		// 다음 페이지		this.nextPageNo = this.endPageNo + 1;		if( nextPageNo > lastPageNo )			nextPageNo = lastPageNo;		this.beginRowNum = ((this.pageNo-1)* pageRowCnt);		this.endRowNum   = this.pageNo * pageRowCnt +1;	}	public void setNavigationInfo( long totRowCnt, long pageRowCnt, long pageNo, long start, HoParameter parameter, int naviCnt )	{		this.naviCnt = naviCnt;		this.pageNo = pageNo;		this.parameter = parameter;		this.totRowCnt = totRowCnt;		this.pageRowCnt = pageRowCnt;		// 시작페이지		this.beginPageNo = ((this.pageNo-1) / this.naviCnt) * this.naviCnt + 1;		// 마지막 페이지		this.lastPageNo = (int)(totRowCnt/pageRowCnt);		if( totRowCnt % pageRowCnt > 0 )			lastPageNo++;		if( this.pageNo > lastPageNo )			this.pageNo = lastPageNo;		else if( this.pageNo < 1 )			this.pageNo = 1;		// 끝 페이지		this.endPageNo = beginPageNo + (this.naviCnt-1);		if( endPageNo > lastPageNo )			endPageNo = lastPageNo;		// 이전 페이지		this.prevPageNo = this.beginPageNo -1;		if( prevPageNo < 1 )			prevPageNo = 1;		// 다음 페이지		this.nextPageNo = this.endPageNo + 1;		if( nextPageNo > lastPageNo )			nextPageNo = lastPageNo;		this.beginRowNum = ((this.pageNo-1)* pageRowCnt);		this.endRowNum   = this.pageNo * pageRowCnt +1;	}	public void setNavigationInfo_ori( long totRowCnt, long pageRowCnt, long pageNo, HoParameter parameter )	{		this.pageNo = pageNo;		this.parameter = parameter;		this.totRowCnt = totRowCnt;		this.pageRowCnt = pageRowCnt;		// 시작페이지		this.beginPageNo = ((this.pageNo-1) / 10) * 10 + 1;		// 마지막 페이지		this.lastPageNo = (int)(totRowCnt/pageRowCnt);		if( totRowCnt % pageRowCnt > 0 )			lastPageNo++;		if( this.pageNo > lastPageNo )			this.pageNo = lastPageNo;		else if( this.pageNo < 1 )			this.pageNo = 1;		// 끝 페이지		this.endPageNo = beginPageNo + 9;		if( endPageNo > lastPageNo )			endPageNo = lastPageNo;		// 이전 페이지		this.prevPageNo = this.beginPageNo -1;		if( prevPageNo < 1 )			prevPageNo = 1;		// 다음 페이지		this.nextPageNo = this.endPageNo + 1;		if( nextPageNo > lastPageNo )			nextPageNo = lastPageNo;		this.beginRowNum = ((this.pageNo-1)* pageRowCnt);		this.endRowNum   = this.pageNo * pageRowCnt +1;	}	/**	 * @return	 * @uml.property  name="beginRowNum"	 */	public long getBeginRowNum()	{		return this.beginRowNum;	}	/**	 * @return	 * @uml.property  name="endRowNum"	 */	public long getEndRowNum()	{		return this.endRowNum;	}	/**	 * @return	 * @uml.property  name="pageNo"	 */	public long getPageNo()	{		return this.pageNo;	}	public String getZeroListMsgKey() {		if( pageRowCnt == 0 ) {			return "HO-PAGE-INIT"; //검색조건을 입력하신후 조회하세요.		} else if( totRowCnt == 0 ){			return "HO-PAGE-INIT-NONE"; // "조건에 해당하는 데이터가 없습니다.";		} else {			return "HO-PAGE-INIT-EXISTS"; // "데이터가 존재합니다.";		}	}}